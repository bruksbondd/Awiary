{"version":3,"sources":["component/spinner/spiner.module.css","component/header/logo.svg","component/header/signOut.svg","component/sidebarCalendar/sidebarCalendar.module.css","component/note/note.module.css","component/sidebar/sidebar.module.css","App.module.css","serviceWorker.ts","helpers/changeFormatDate.ts","services/firebase.js","store/noteReducer.ts","store/calendarReducer.js","store/actionTypes.js","store/activityReducer.ts","store/editorReducer.ts","hooks/useShallowEqualSelector.tsx","component/calendar/Calendar.tsx","pages/Home.tsx","helpers/auth.js","component/Footer.tsx","pages/Sign/Login.tsx","pages/Sign/Signup.tsx","component/spinner/Spinner.js","store/authReducer.ts","component/header/Header.tsx","helpers/customRoute.js","helpers/validateContent.js","component/modal/Modal.tsx","component/editor/Editor.tsx","component/messageItem/MessageItem.tsx","helpers/shouldShowDay.ts","component/messages/Messages.tsx","component/editorPanel/EditorPanel.tsx","component/note/Note.tsx","store/thunksDayReducer.ts","component/sidebarCalendar/SidebarCalendar.js","component/inputDay/InputDay.tsx","component/activityEvent/ActivityEvent.tsx","component/sidebar/Sidebar.tsx","pages/Day/Day.tsx","component/allMessages/AllMessages.tsx","pages/Notes/Notes.tsx","App.tsx","store/index.ts","index.tsx","pages/Sign/Sign.module.css","component/messages/messages.module.css","component/header/header.module.css","component/inputDay/inputDay.module.css","component/activityEvent/activityEvent.module.css","component/allMessages/allMessages.module.css","pages/Notes/notes.module.css","pages/Sign/google.svg","component/editorPanel/editorPanel.module.css","pages/Day/day.module.css","component/modal/modal.module.css","component/calendar/Calendar.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","changeFormatDate","timestamp","Date","divide","d","getDate","getMonth","getFullYear","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","rtdb","database","setupPresence","user","isOfflineForRTDB","state","lastChanged","ServerValue","TIMESTAMP","isOnlineForRTDB","isOfflineForFirestore","FieldValue","serverTimestamp","isOnlineForFirestore","rtdbRef","ref","uid","userDoc","doc","on","snapshot","a","val","update","status","onDisconnect","set","initialState","allNotes","allAwareness","allNotesMonth","todayNotes","loadingNotes","lastSnapshotNote","lastSnapshotAware","runOutOfNotes","errorNotes","content","itemDate","key","dataNewDay","typePage","actions","error","type","payload","getNotesSelectedDay","dispatch","getState","selectedDate","calendar","userUid","notesArray","allMessages","collection","get","allMessagesToday","docs","push","data","id","sort","b","getAllNotes","path","notes","lastSnapshot","allAware","all","allNotesArray","first","collectionGroup","where","orderBy","limit","startAfter","last","length","forEach","newArray","concat","undefined","updateAllNotes","keyNote","itemData","isDate","messages","newObj","filter","item","map","addNewNote","selectType","editor","selectedType","todayDate","add","createdAt","date","now","updateNote","newContent","then","deleteNote","delete","todayData","loadingData","errorData","setTodayNumber","day","fetchToDayData","calendarReducer","action","allActivity","loadingActivity","errorActivity","todayActivity","array","activity","fetchToDayActivity","onSnapshot","querySnapshot","activeEditor","activeEditorChangeOldContent","activeFillEditor","activeModal","changeSelectedType","selected","changeEditorContent","text","toggleEditorOldContent","isContent","toggleActiveFillEditor","toggleActiveModal","selector","useSelector","shallowEqual","Calendar","useState","currentMonth","setCurrentMonth","history","useHistory","useShallowEqualSelector","active","useDispatch","useEffect","arrDate","console","log","i","nextMonth","addMonths","prevMonth","subMonths","className","styles","header","row","col","colStart","icon","onClick","colCenter","format","locale","ru","colEnd","days","startDate","startOfWeek","weekStartsOn","dayWek","addDays","renderDays","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","formattedDate","cloneDay","year","mount","today","activitiesToday","Object","keys","meditation","includes","style","color","yoga","notesToday","awarenesToday","cell","isSameMonth","isSameDay","disabled","isFuture","toString","onDateClick","number","activities","bg","body","renderCells","Home","props","signup","email","password","createUserWithEmailAndPassword","signin","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","Footer","Login","setError","setEmail","setPassword","handleSubmit","event","preventDefault","message","googleSignIn","wrapper","form_box","autoComplete","onSubmit","header_block","title","to","placeholder","name","onChange","target","value","submit","signGoogle","src","google","alt","SignUp","Spinner","spinner","CircularProgress","displayName","photoUrl","loading","isAuth","Header","changeType","headerContainer","headerLogo","logo","headerDate","headerNavigationBlock","headerNavigation","headerNavigationItem","headerNavigationItemCenter","signOut","catch","headerLogout","PrivateRoute","Component","component","authenticated","rest","createBrowserHistory","render","pathname","from","PublicRoute","validateContent","replace","trim","split","SuccessEditModal","handleEdit","handleCreateNote","Modal","aria-labelledby","aria-describedby","modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paper","Button","variant","Editor","handleSaveContent","saveContent","hide","setContents","lang","setOptions","showPathLabel","maxCharCount","width","height","minHeight","maxHeight","buttonList","callBackSave","MessageItem","note","previous","isAll","setTime","showDay","seconds","shouldShowDay","showDate","editorContent","useCallback","changeItemDate","setKey","removeContent","dateItem","DateBlock","date_item","message_item","message_item_box","class_note","class_awareness","message_time","getHours","getMinutes","message_text","ReactHtmlParser","message_remote","message_editor","message_remove","date_item_container","Messages","messages_area","messages_area_active_editor","EditorPanel","select","handelHideEditor","handelClearEditor","NoteButton","withStyles","theme","root","palette","getContrastText","purple","backgroundColor","opacity","AwarenessButton","CleanButton","border","HiddenButton","editor_panel","editor_panel_group","Note","thunk","thought","errorThanks","fetchToDayThanks","arrThunk","thunks","setState","this","selectedDay","renderHeader","React","connect","withRouter","InputDay","setText","editMode","setEditMode","hadChange","setHadChange","blockInput","inputTitle","input","e","autoFocus","save","thunksRef","addThanks","showText","ActivityEvent","activeMeditation","activeYoga","handleActive","arrayRemove","removeActivity","isTodayActivity","activityRef","arrayUnion","addActivity","actionBox","actionItem","actionText","Sidebar","thunksValue","thoughtValue","pageDaySideBar","SidebarCalendar","Day","pageDay","pageDayContent","AllMessages","elHeight","setElHeight","overlayEl","useRef","childrenOverlayEl","pathWithSlash","useLocation","substring","allItems","current","clientHeight","column","column_reverse","overflow","display","dataLength","next","flexDirection","inverse","hasMore","loader","scrollableTarget","index","Notes","button","App","onAuthStateChanged","photoURL","userFirebase","merge","Container","container","maxWidth","exact","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.897e2f5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spiner_spinner__2Qa-P\"};","module.exports = __webpack_public_path__ + \"static/media/logo.cb130adb.svg\";","module.exports = __webpack_public_path__ + \"static/media/signOut.05fcdd59.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"sidebarCalendar_icon__3OneK\",\"logo\":\"sidebarCalendar_logo__U9_xQ\",\"row\":\"sidebarCalendar_row__1z4xl\",\"row-middle\":\"sidebarCalendar_row-middle__1zIRu\",\"col\":\"sidebarCalendar_col__2aYcO\",\"colStart\":\"sidebarCalendar_colStart__ROUJ2\",\"colCenter\":\"sidebarCalendar_colCenter__mKAy7\",\"colEnd\":\"sidebarCalendar_colEnd__3q6ec\",\"calendar\":\"sidebarCalendar_calendar__2DAvq\",\"header\":\"sidebarCalendar_header__3j7XO\",\"days\":\"sidebarCalendar_days__g_P4S\",\"cell\":\"sidebarCalendar_cell__13At_\",\"selected\":\"sidebarCalendar_selected__SoXFL\",\"body\":\"sidebarCalendar_body__2R34t\",\"number\":\"sidebarCalendar_number__2wxYQ\",\"disabled\":\"sidebarCalendar_disabled__IAjHI\",\"bg\":\"sidebarCalendar_bg__1jVXe\",\"selectedDay\":\"sidebarCalendar_selectedDay__1J9P-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"note_editor__3Nu_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageDaySideBar\":\"sidebar_pageDaySideBar__25beE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__fkyjV\",\"App\":\"App_App__iePe9\",\"App-logo\":\"App_App-logo__jXAwo\",\"App-logo-spin\":\"App_App-logo-spin__3vZlR\",\"App-header\":\"App_App-header__3d04R\",\"App-link\":\"App_App-link__3-vbu\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const changeFormatDate = (timestamp = new Date(), divide = '') => {\n  const d = new Date(timestamp);\n  return `${d.getDate()}${divide}${\n    d.getMonth() + 1\n  }${divide}${d.getFullYear()}`;\n};\nexport const changeReverseFormatDate = (timestamp = new Date()) => {\n  const d = new Date(timestamp);\n  return `${d.getFullYear()}/${d.getMonth() + 1}/${d.getDate()}`;\n};\n\nexport const reverseFormatDate = (timestamp = new Date()) => {\n  const d = new Date(timestamp);\n  return `[${d.getFullYear()}][${d.getMonth() + 1}][${d.getDate()}]`;\n};\n\nexport const formatDate = (date = new Date()) => {\n  // return ('0' +(date.getDate())).slice(-2)+('0' +(date.getMonth()+1)).slice(-2)+('0'+date.getFullYear()).slice(-4);\n  return `${date.getDate()}${date.getMonth() + 1}${date.getFullYear()}`;\n};\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst auth = firebase.auth;\r\nconst db = firebase.firestore();\r\nconst rtdb = firebase.database();\r\n\r\nexport function setupPresence(user) {\r\n  const isOfflineForRTDB = {\r\n    state: 'offline',\r\n    lastChanged: firebase.database.ServerValue.TIMESTAMP,\r\n  };\r\n\r\n  const isOnlineForRTDB = {\r\n    state: 'online',\r\n    lastChanged: firebase.database.ServerValue.TIMESTAMP,\r\n  };\r\n\r\n  const isOfflineForFirestore = {\r\n    state: 'offline',\r\n    lastChanged: firebase.firestore.FieldValue.serverTimestamp(),\r\n  };\r\n\r\n  const isOnlineForFirestore = {\r\n    state: 'online',\r\n    lastChanged: firebase.firestore.FieldValue.serverTimestamp(),\r\n  };\r\n\r\n  const rtdbRef = rtdb.ref(`/status/${user.uid}`);\r\n  const userDoc = db.doc(`/users/${user.uid}`);\r\n\r\n  rtdb.ref('.info/connected').on('value', async (snapshot) => {\r\n    if (snapshot.val() === false) {\r\n      userDoc.update({\r\n        status: isOfflineForFirestore,\r\n      });\r\n      return;\r\n    }\r\n\r\n    await rtdbRef.onDisconnect().set(isOfflineForRTDB);\r\n    rtdbRef.set(isOnlineForRTDB);\r\n    userDoc.update({\r\n      status: isOnlineForFirestore,\r\n    });\r\n  });\r\n}\r\n\r\nexport { db, rtdb, firebase, auth };\r\n","import { BaseThunkType, InferActionsTypes } from './index'\r\nimport { db } from '../services/firebase'\r\nimport { changeFormatDate } from '../helpers/changeFormatDate'\r\n\r\nconst initialState = {\r\n  allNotes: [] as [],\r\n  allAwareness: [] as [],\r\n  allNotesMonth: [] as Array<{}>,\r\n  todayNotes: [] as any,\r\n  loadingNotes: true as boolean,\r\n  lastSnapshotNote: null as number | null,\r\n  lastSnapshotAware: null as number | null,\r\n  runOutOfNotes: true as boolean,\r\n  errorNotes: null as null | string,\r\n  content: '' as string,\r\n  itemDate: '' as string,\r\n  key: null as number | null,\r\n  dataNewDay: null as null | number,\r\n  typePage: 'note' as string,\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    case 'AW/NOTE/FETCH_NOTES_REQUEST':\r\n    case 'AW/NOTE/FETCH_NOTES_FAILURE':\r\n    case 'AW/NOTE/FETCH_NOTES_DAY':\r\n    case 'AW/NOTE/FETCH_NOTES_ALL':\r\n    case 'AW/NOTE/FETCH_AWARENESS_ALL':\r\n    case 'AW/NOTE/SET_LAST_NOTES':\r\n    case 'AW/NOTE/SET_LAST_AWARENESS':\r\n    case 'AW/NOTE/FINISH_SCROLL_NOTES':\r\n    case 'AW/NOTE/FETCH_NOTES_MONTHS':\r\n    case 'AW/NOTE/SET_DATE_ITEM':\r\n    case 'AW/NOTE/SET_TYPE_PAGE':\r\n    case 'AW/NOTE/LOGOUT_AND_CLEAN':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  noteRequested: () =>\r\n    ({\r\n      type: 'AW/NOTE/FETCH_NOTES_REQUEST',\r\n      payload: {\r\n        todayNotes: [],\r\n        loadingNotes: true,\r\n        errorNotes: null,\r\n      },\r\n    } as const),\r\n  noteError: (error: string) =>\r\n    ({\r\n      type: 'AW/NOTE/FETCH_NOTES_FAILURE',\r\n      payload: {\r\n        todayNotes: [],\r\n        loadingNotes: false,\r\n        errorNotes: error,\r\n      },\r\n    } as const),\r\n  getNotesDay: (todayNotes: []) =>\r\n    ({\r\n      type: 'AW/NOTE/FETCH_NOTES_DAY',\r\n      payload: {\r\n        loadingNotes: false,\r\n        errorNotes: null,\r\n        todayNotes,\r\n      },\r\n    } as const),\r\n  getAllNotesMonth: (allNotesMonth: []) =>\r\n    ({\r\n      type: 'AW/NOTE/FETCH_NOTES_MONTHS',\r\n      payload: {\r\n        loadingNotes: false,\r\n        errorNotes: null,\r\n        allNotesMonth,\r\n      },\r\n    } as const),\r\n  getAllNotes: (allNotes: []) =>\r\n    ({\r\n      type: 'AW/NOTE/FETCH_NOTES_ALL',\r\n      payload: {\r\n        loadingNotes: false,\r\n        errorNotes: null,\r\n        allNotes,\r\n      },\r\n    } as const),\r\n  getAllAwareness: (allAwareness: []) =>\r\n  ({\r\n    type: 'AW/NOTE/FETCH_AWARENESS_ALL',\r\n    payload: {\r\n      loadingNotes: false,\r\n      errorNotes: null,\r\n      allAwareness,\r\n    },\r\n  } as const),\r\n  setLastNotes: (lastSnapshotNote: number | null) =>\r\n    ({\r\n      type: 'AW/NOTE/SET_LAST_NOTES',\r\n      payload: {\r\n        loadingNotes: false,\r\n        errorNotes: null,\r\n        lastSnapshotNote,\r\n      },\r\n    } as const),\r\n  setLastAwareness: (lastSnapshotAware: number | null) =>\r\n    ({\r\n      type: 'AW/NOTE/SET_LAST_AWARENESS',\r\n      payload: {\r\n        loadingNotes: false,\r\n        errorNotes: null,\r\n        lastSnapshotAware,\r\n      },\r\n    } as const),\r\n  finishScroll: (runOutOfNotes: boolean) =>\r\n    ({\r\n      type: 'AW/NOTE/FINISH_SCROLL_NOTES',\r\n      payload: {\r\n        loadingNotes: false,\r\n        errorNotes: null,\r\n        runOutOfNotes,\r\n      },\r\n    } as const),\r\n  getDateNewDay: (dataNewDay: number) =>\r\n    ({\r\n      type: 'AW/NOTE/GET_DATE_NEW_DAY',\r\n      payload: {\r\n        dataNewDay,\r\n      },\r\n    } as const),\r\n  setDateItem: (itemDate: string) =>\r\n    ({\r\n      type: 'AW/NOTE/SET_DATE_ITEM',\r\n      payload: {\r\n        itemDate,\r\n      },\r\n    } as const),\r\n  setTypePage: (typePage: string) =>\r\n    ({\r\n      type: 'AW/NOTE/SET_TYPE_PAGE',\r\n      payload: {\r\n        typePage,\r\n      },\r\n    } as const),\r\n  logoutAndClean: () =>\r\n    ({\r\n      type: 'AW/NOTE/LOGOUT_AND_CLEAN',\r\n      payload: {\r\n        allNotes: [] as [],\r\n        allAwareness: [] as [],\r\n        allNotesMonth: [] as Array<{}>,\r\n        todayNotes: [] as any,\r\n        loadingNotes: true as boolean,\r\n        lastSnapshotNote: null as number | null,\r\n        lastSnapshotAware: null as number | null,\r\n        runOutOfNotes: true as boolean,\r\n        errorNotes: null as null | string,\r\n        content: '' as string,\r\n        itemDate: '' as string,\r\n        key: null as number | null,\r\n        dataNewDay: null as null | number,\r\n        typePage: 'note' as string,\r\n      },\r\n    } as const),\r\n}\r\n\r\nexport const changeItemDate = (itemDate: string): ThunkType => async (dispatch) => {\r\n  dispatch(actions.setDateItem(itemDate))\r\n}\r\n\r\nexport const getNotesSelectedDay = (): ThunkType => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const selectedDate = changeFormatDate(getState().calendar.selectedDate, '')\r\n  const userUid = getState().auth.uid\r\n  try {\r\n    const notesArray = [] as any\r\n    const allMessages = db.collection(`${userUid}/${selectedDate}/notes`)\r\n    const allMessagesToday = await allMessages.get()\r\n    for (const doc of allMessagesToday.docs) {\r\n      notesArray.push({...doc.data(), key: doc.id})\r\n    }\r\n\r\n    notesArray.sort((a: { id: number }, b: { id: number }) => a.id - b.id)\r\n    dispatch(actions.getNotesDay(notesArray))\r\n  } catch (error) {\r\n    dispatch(actions.noteError(error))\r\n  }\r\n}\r\n\r\nexport const getAllNotes = (path: string): ThunkType => async (dispatch, getState) => {\r\n  const userUid = getState().auth.uid\r\n  const lastSnapshotNote = getState().notes.lastSnapshotNote as number | null\r\n  const lastSnapshotAware = getState().notes.lastSnapshotAware as number | null\r\n  let lastSnapshot = path === 'note' ? lastSnapshotNote : lastSnapshotAware\r\n  const allNotes = getState().notes.allNotes as []\r\n  const allAware = getState().notes.allAwareness as []\r\n  let all = path === 'note' ? allNotes : allAware\r\n  const allNotesArray = [] as any\r\n\r\n  let first = db.collectionGroup('notes')\r\n    .where('uid', '==', userUid)\r\n    .where('type', '==', path)\r\n    .orderBy('id', 'desc')\r\n    .limit(10)\r\n  if (lastSnapshot) {\r\n    first = first.startAfter(lastSnapshot)\r\n  }\r\n  const snapshot = await first.get()\r\n  const last = snapshot.docs[snapshot.docs.length - 1]\r\n\r\n  snapshot.docs.forEach((doc) => {\r\n    allNotesArray.push({...doc.data(), key: doc.id})\r\n  })\r\n\r\n  if (last && last.data().id) {\r\n    const newArray: any = all.concat(allNotesArray)\r\n    path === 'note' ? dispatch(actions.getAllNotes(newArray)) : dispatch(actions.getAllAwareness(newArray))\r\n    path === 'note' ? dispatch(actions.setLastNotes(last.data().id)) : dispatch(actions.setLastAwareness(last.data().id))\r\n  }\r\n\r\n  if (snapshot && last === undefined) {\r\n    dispatch(actions.finishScroll(false))\r\n  }\r\n}\r\n\r\nexport const changeTypePage = (typePage: string): ThunkType => async (dispatch) => {\r\n  dispatch(actions.setTypePage(typePage))\r\n  // dispatch(actions.getAllNotes([]))\r\n\r\n  dispatch(getAllNotes(typePage))\r\n  // dispatch(actions.setLastNotes(null))\r\n  dispatch(actions.finishScroll(true))\r\n}\r\n\r\nexport const updateAllNotes = (keyNote: string | undefined = ''): ThunkType => async (\r\n  dispatch,\r\n  getState,\r\n) => {\r\n  const selectedDate = changeFormatDate(getState().calendar.selectedDate, '')\r\n  const itemData = getState().notes.itemDate as string | ''\r\n  const isDate = itemData ? itemData : selectedDate\r\n  const userUid = getState().auth.uid\r\n  const allNotes = getState().notes.allNotes as []\r\n  const allAwareness = getState().notes.allAwareness as []\r\n\r\n  const messages = await db.doc(`${userUid}/${isDate}/notes/${keyNote}`).get()\r\n  const newObj: any = {...messages.data(), key: messages.id}\r\n  let all = newObj.type === 'note' ? allNotes : allAwareness\r\n  const newArray: any = all.filter((item: { id: string; key: string }) => {\r\n    if (messages.data() === undefined && item.key === newObj.key) {\r\n      return false\r\n    }\r\n    return item\r\n  }).map((item: { id: string }) => {\r\n    if (item.id === newObj.id) {\r\n      return newObj\r\n    }\r\n    return item\r\n  })\r\n  if (keyNote) {\r\n    newObj.type === 'note' ? dispatch(actions.getAllNotes(newArray)) : dispatch(actions.getAllAwareness(newArray))\r\n  }\r\n}\r\n\r\nexport const addNewNote = (content: string): ThunkType => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const userUid = getState().auth.uid\r\n  const selectType = getState().editor.selectedType\r\n  const typePage = getState().notes.typePage\r\n  const todayDate = changeFormatDate(new Date(), '')\r\n\r\n  try {\r\n    await db.collection(`${userUid}/${todayDate}/notes`).add({\r\n      createdAt: new Date(),\r\n      type: selectType,\r\n      date: todayDate,\r\n      content,\r\n      id: Date.now(),\r\n      uid: userUid,\r\n    })\r\n    dispatch(getNotesSelectedDay())\r\n    dispatch(actions.getAllNotes([]))\r\n    dispatch(actions.setLastNotes(0))\r\n    dispatch(getAllNotes(typePage))\r\n  } catch (error) {\r\n    dispatch(actions.noteError(error))\r\n  }\r\n}\r\n\r\nexport const updateNote = (\r\n  newContent: string,\r\n  keyNote: string,\r\n): ThunkType => async (dispatch, getState) => {\r\n  const userUid = getState().auth.uid\r\n  const itemData = getState().notes.itemDate as string\r\n\r\n  try {\r\n    await db\r\n      .doc(`${userUid}/${itemData}/notes/${keyNote}`)\r\n      .update({\r\n        content: newContent,\r\n      })\r\n      .then(() => {\r\n        dispatch(getNotesSelectedDay())\r\n        dispatch(updateAllNotes(keyNote))\r\n      })\r\n  } catch (error) {\r\n    dispatch(actions.noteError(error))\r\n  }\r\n}\r\n\r\nexport const deleteNote = (key: string, type: string, date: string): ThunkType => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n\r\n  const userUid = getState().auth.uid\r\n  try {\r\n    await db.doc(`${userUid}/${date}/notes/${key}`).delete()\r\n    dispatch(getNotesSelectedDay())\r\n    dispatch(updateAllNotes(key))\r\n  } catch (error) {\r\n    dispatch(actions.noteError(error))\r\n  }\r\n}\r\n\r\nexport const getAllNotesMonth = (): ThunkType => async (dispatch, getState) => {\r\n  const userUid = getState().auth.uid\r\n  const arrDate: string[] = []\r\n  try {\r\n    const allDay = await db.collection(userUid).get()\r\n    allDay.forEach((doc) => {\r\n      arrDate.push(doc.id)\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  try {\r\n    const notesArray = [] as any\r\n    for (let i = 0; i < arrDate.length; i++) {\r\n      const allNotes = await db\r\n        .collection(`${userUid}/${arrDate[i]}/notes`)\r\n        .get()\r\n      for (const doc of allNotes.docs) {\r\n        notesArray.push({...doc.data(), key: doc.id})\r\n      }\r\n    }\r\n    dispatch(actions.getAllNotesMonth(notesArray))\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const resetNotes = (): ThunkType => async (dispatch) => {\r\n  dispatch(actions.logoutAndClean())\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsType>;\r\n","import {\n  FETCH_DATA_FAILURE,\n  FETCH_DATA_REQUEST,\n  FETCH_DATA_SUCCESS,\n  FETCH_TODAY_NUMBER,\n} from './actionTypes';\nimport { getNotesSelectedDay } from './noteReducer';\n\nconst initialState = {\n  selectedDate: null,\n  todayData: [],\n  loadingData: true,\n  errorData: null,\n};\n\nconst calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_DATA_REQUEST:\n      return {\n        ...state,\n        todayData: [],\n        loadingData: true,\n        errorData: null,\n      };\n    case FETCH_DATA_SUCCESS:\n      return {\n        ...state,\n        todayData: action.payload,\n        loadingData: false,\n        errorData: null,\n      };\n    case FETCH_TODAY_NUMBER:\n      return {\n        ...state,\n        selectedDate: action.payload,\n      };\n    case FETCH_DATA_FAILURE:\n      return {\n        ...state,\n        todayData: [],\n        loadingData: false,\n        errorData: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nconst dataRequested = () => ({ type: FETCH_DATA_REQUEST });\n\nexport const setTodayNumber = (day) => {\n  return {\n    type: 'FETCH_TODAY_NUMBER',\n    payload: day,\n  };\n};\n\nexport const fetchToDayData = (day) => async (dispatch, getState) => {\n  dispatch(dataRequested());\n  dispatch(setTodayNumber(day));\n  dispatch(getNotesSelectedDay(day));\n};\n\nexport default calendarReducer;\n","export const  INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\nexport const  FETCH_SMILES_REQUEST = 'FETCH_SMILES_REQUEST'\r\nexport const  FETCH_SMILES_SUCCESS = 'FETCH_SMILES_SUCCESS'\r\nexport const  FETCH_SMILES_FAILURE = 'FETCH_SMILES_FAILURE'\r\nexport const  FETCH_SMILE_TODAY_SUCCESS = 'FETCH_SMILE_TODAY_SUCCESS'\r\n\r\nexport const  FETCH_DATA_REQUEST = 'FETCH_DATA_REQUEST'\r\nexport const  FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS'\r\nexport const  FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE'\r\nexport const  FETCH_TODAY_NUMBER = 'FETCH_TODAY_NUMBER'\r\n\r\n\r\nexport const  FETCH_NOTES_REQUEST = 'FETCH_NOTES_REQUEST'\r\nexport const  FETCH_NOTES_FAILURE = 'FETCH_NOTES_FAILURE'\r\nexport const  FETCH_NOTES_DAY = 'FETCH_NOTES_DAY'\r\nexport const  ADD_NOTE = 'ADD_NOTE'","import { db, firebase } from '../services/firebase'\r\n\r\nimport { BaseThunkType, InferActionsTypes } from './index';\r\nimport { changeFormatDate } from '../helpers/changeFormatDate'\r\n\r\n\r\nconst initialState = {\r\n  allActivity: [] as [],\r\n  loadingActivity: true,\r\n  errorActivity: null,\r\n  todayActivity: [] as [],\r\n};\r\n\r\nexport const activeReducer = (state = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    case 'AW/ACTIVITY/FETCH_ACTIVITY_REQUEST':\r\n    case 'AW/ACTIVITY/FETCH_ACTIVITY_TODAY_SUCCESS':\r\n    case 'AW/ACTIVITY/FETCH_ACTIVITY_SUCCESS':\r\n    case 'AW/ACTIVITY/FETCH_ACTIVITY_FAILURE':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  activityRequested: () =>\r\n    ({\r\n      type: 'AW/ACTIVITY/FETCH_ACTIVITY_REQUEST',\r\n      payload: {\r\n        todayActivity: [],\r\n        loadingActivity: true,\r\n        errorActivity: null,\r\n      },\r\n    } as const),\r\n  activityTodayLoaded: (array: any) =>\r\n    ({\r\n      type: 'AW/ACTIVITY/FETCH_ACTIVITY_TODAY_SUCCESS',\r\n      payload: {\r\n        todayActivity: array,\r\n        loadingActivity: false,\r\n        errorActivity: null,\r\n      },\r\n    } as const),\r\n  activityAllLoaded: (activity: Array<string>) =>\r\n    ({\r\n      type: 'AW/ACTIVITY/FETCH_ACTIVITY_SUCCESS',\r\n      payload: {\r\n        allActivity: activity,\r\n        loadingActivity: false,\r\n        errorActivity: null,\r\n      },\r\n    } as const),\r\n  activityError: (error: string) =>\r\n    ({\r\n      type: 'AW/ACTIVITY/FETCH_ACTIVITY_FAILURE',\r\n      payload: {\r\n        todayActivity: [],\r\n        loadingActivity: false,\r\n        errorActivity: error,\r\n      },\r\n    } as const)\r\n};\r\n\r\nexport const fetchActivity = (): ThunkType => async (dispatch, getState) => {\r\n  const userUid = getState().auth.uid;\r\n  try {\r\n    db.collection(userUid).onSnapshot((querySnapshot) => {\r\n      const activity: any = [] ;\r\n      querySnapshot.forEach((doc) => {\r\n        activity.push({ [doc.id]: doc.data() });\r\n      });\r\n      dispatch(actions.activityAllLoaded(activity));\r\n    });\r\n  } catch (error) {\r\n    dispatch(actions.activityError(error));\r\n  }\r\n};\r\n\r\nexport const fetchToDayActivity = (): ThunkType => async (dispatch, getState) => {\r\n  const selectedDate = changeFormatDate(getState().calendar.selectedDate, '');\r\n  const userUid = getState().auth.uid;\r\n  dispatch(actions.activityRequested());\r\n\r\n  try {\r\n    db.collection(userUid)\r\n      .doc(selectedDate)\r\n      .onSnapshot(async (querySnapshot ) => {\r\n        const data = await querySnapshot.data()\r\n\r\n        if (data) {\r\n          dispatch(actions.activityTodayLoaded(data.activity));\r\n        }\r\n      });\r\n  } catch (error) {\r\n    dispatch(actions.activityError(error));\r\n  }\r\n};\r\n\r\nexport const addActivity = (name: string): ThunkType => async (dispatch, getState) => {\r\n  const selectedDate = changeFormatDate(getState().calendar.selectedDate, '');\r\n  const isTodayActivity: { todayActivity: [] } = getState().active\r\n\r\n  const today = changeFormatDate(new Date(), '');\r\n  const userUid = getState().auth.uid;\r\n\r\n  if (today !== selectedDate) {\r\n    return;\r\n  }\r\n\r\n  const activityRef = db.collection(userUid).doc(selectedDate);\r\n\r\n  try {\r\n    if (isTodayActivity.todayActivity.length) {\r\n      await activityRef.update({\r\n        activity: firebase.firestore.FieldValue.arrayUnion(name),\r\n      });\r\n    } else {\r\n      await activityRef.set({\r\n        activity: firebase.firestore.FieldValue.arrayUnion(name),\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch(actions.activityError(error));\r\n  }\r\n};\r\n\r\nexport const removeActivity = (name: string): ThunkType => async (dispatch, getState) => {\r\n  const selectedDate = changeFormatDate(getState().calendar.selectedDate, '');\r\n  const today = changeFormatDate(new Date(), '');\r\n  const userUid = getState().auth.uid;\r\n\r\n  if (today !== selectedDate) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await db\r\n      .collection(userUid)\r\n      .doc(selectedDate)\r\n      .update({\r\n        activity: firebase.firestore.FieldValue.arrayRemove(name),\r\n      });\r\n  } catch (error) {\r\n    dispatch(actions.activityError(error));\r\n  }\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsType>;","import { BaseThunkType, InferActionsTypes } from './index';\nimport { addNewNote, getAllNotes } from './noteReducer'\n\nconst initialState = {\n  activeEditor: false as boolean,\n  selectedType: 'note' as string,\n  content: '' as string,\n  activeEditorChangeOldContent: false as boolean,\n  activeFillEditor: true as boolean,\n  activeModal: false as boolean,\n  key: '' as string,\n};\n\nexport const editorReducer = (state = initialState, action: ActionsType) => {\n  switch (action.type) {\n    case 'AW/EDITOR/ACTIVE_EDITOR':\n    case 'AW/EDITOR/CHANGE_TYPE':\n    case 'AW/EDITOR/CHANGE_CONTENT':\n    case 'AW/EDITOR/CHANGE_CONTENT_OLD':\n    case 'AW/EDITOR/ACTIVE_MODAL':\n    case 'AW/EDITOR/SET_KEY_MESSAGE':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst actions = {\n  activeEditor: (activeEditor: boolean) =>\n    ({\n      type: 'AW/EDITOR/ACTIVE_EDITOR',\n      payload: {\n        activeEditor,\n      },\n    } as const),\n  changeType: (selectedType: string) =>\n    ({\n      type: 'AW/EDITOR/CHANGE_TYPE',\n      payload: {\n        selectedType,\n      },\n    } as const),\n  changeContent: (content: string) =>\n    ({\n      type: 'AW/EDITOR/CHANGE_CONTENT',\n      payload: {\n        content,\n      },\n    } as const),\n  changeContentOld: (activeEditorChangeOldContent: boolean) =>\n    ({\n      type: 'AW/EDITOR/CHANGE_CONTENT_OLD',\n      payload: {\n        activeEditorChangeOldContent,\n      },\n    } as const),\n  toggleEditor: (activeFillEditor: boolean) =>\n    ({\n      type: 'AW/EDITOR/ACTIVE_EDITOR',\n      payload: {\n        activeFillEditor,\n      },\n    } as const),\n  toggleModal: (activeModal: boolean) =>\n    ({\n      type: 'AW/EDITOR/ACTIVE_MODAL',\n      payload: {\n        activeModal,\n      },\n    } as const),\n  setKey: (key: string) =>\n    ({\n      type: 'AW/EDITOR/SET_KEY_MESSAGE',\n      payload: {\n        key,\n      },\n    } as const),\n};\n\nexport const activeStateEditor = (state: boolean): ThunkType => async (\n  dispatch,\n) => {\n  dispatch(actions.activeEditor(state));\n};\n\nexport const changeSelectedType = (selected: string): ThunkType => async (\n  dispatch,\n) => {\n  dispatch(actions.changeType(selected));\n};\n\nexport const changeEditorContent = (text: string): ThunkType => async (\n  dispatch,\n) => {\n  dispatch(actions.changeContent(text));\n};\n\nexport const toggleEditorOldContent = (isContent = true): ThunkType => async (\n  dispatch,\n) => {\n  dispatch(actions.changeContentOld(isContent));\n  dispatch(actions.activeEditor(false));\n};\n\nexport const toggleActiveFillEditor = (\n  activeFillEditor: boolean,\n): ThunkType => async (dispatch) => {\n  dispatch(actions.toggleEditor(activeFillEditor));\n};\n\nexport const toggleActiveModal = (activeModal: boolean): ThunkType => async (\n  dispatch,\n) => {\n  dispatch(actions.toggleModal(activeModal));\n};\n\nexport const setKey = (key: string): ThunkType => async (dispatch) => {\n  dispatch(actions.setKey(key));\n  dispatch(actions.changeContentOld(true));\n};\n\nexport const saveContent = (text: string): ThunkType => async (\n  dispatch,\n  getState,\n) => {\n  const typePage = getState().notes.typePage\n  if (getState().editor.activeEditorChangeOldContent) {\n    dispatch(actions.toggleModal(true));\n  } else {\n    dispatch(addNewNote(text));\n    dispatch(actions.toggleModal(false));\n    dispatch(actions.changeContentOld(false));\n    dispatch(getAllNotes(typePage))\n  }\n};\n\ntype InitialStateType = typeof initialState;\ntype ActionsType = InferActionsTypes<typeof actions>;\ntype ThunkType = BaseThunkType<ActionsType>;\n","import { shallowEqual, useSelector } from 'react-redux';\r\nimport {AppStateType} from \"../store\";\r\n\r\n// export const useShallowEqualSelector = (selector) => {\r\n//   return useSelector(selector, shallowEqual);\r\n// }\r\n\r\nexport default <TReturn,>(selector: (state: AppStateType) => TReturn) =>\r\n  useSelector<AppStateType, TReturn>(selector, shallowEqual);\r\n","import React, { FC, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  format,\r\n  startOfWeek,\r\n  endOfMonth,\r\n  addDays,\r\n  startOfMonth,\r\n  endOfWeek,\r\n  isSameMonth,\r\n  isSameDay,\r\n  addMonths,\r\n  subMonths,\r\n  isFuture,\r\n} from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport styles from './Calendar.module.css';\r\n\r\nimport { changeFormatDate } from '../../helpers/changeFormatDate';\r\nimport { fetchToDayData } from '../../store/calendarReducer';\r\nimport { fetchActivity } from '../../store/activityReducer';\r\nimport { getAllNotesMonth } from '../../store/noteReducer';\r\nimport {\r\n  toggleEditorOldContent,\r\n  changeEditorContent,\r\n  toggleActiveFillEditor,\r\n} from '../../store/editorReducer';\r\nimport SpaIcon from '@material-ui/icons/Spa';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport useShallowEqualSelector from '../../hooks/useShallowEqualSelector';\r\nimport { AppStateType } from '../../store'\r\n\r\nconst Calendar: FC = () => {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const history = useHistory();\r\n  const selectedDate = new Date();\r\n  const allActivity = useShallowEqualSelector((state: {active: {allActivity: []}} ) => state.active.allActivity);\r\n  const allNotesMonth = useShallowEqualSelector((state: AppStateType) => state.notes.allNotesMonth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchToDayData());\r\n    dispatch(getAllNotesMonth());\r\n    dispatch(fetchActivity());\r\n  }, [dispatch]);\r\n\r\n  const renderHeader = () => {\r\n    const dateFormat = 'LLLL yyyy';\r\n    return (\r\n      <div className={`${styles.header} ${styles.row}`}>\r\n        <div className={`${styles.col} ${styles.colStart}`}>\r\n          <div className={`${styles.icon}`} onClick={prevMonth}>\r\n            chevron_left\r\n          </div>\r\n        </div>\r\n        <div className={`${styles.col}  ${styles.colCenter}`}>\r\n          <span>{format(currentMonth, dateFormat, { locale: ru })}</span>\r\n        </div>\r\n        <div className={`${styles.col} ${styles.colEnd}`} onClick={nextMonth}>\r\n          <div className={`${styles.icon}`}>chevron_right</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDays = () => {\r\n    const dateFormat = 'EEEE';\r\n    const days = [];\r\n    let startDate = startOfWeek(currentMonth, { weekStartsOn: 1 });\r\n    for (let i = 0; i < 7; i++) {\r\n      let dayWek = format(addDays(startDate, i), dateFormat, { locale: ru });\r\n      days.push(\r\n        <div className={`${styles.col} ${styles.colCenter} `} key={i}>\r\n          {dayWek}\r\n        </div>\r\n      );\r\n    }\r\n    return <div className={`${styles.days} ${styles.row}`}>{days}</div>;\r\n  };\r\n\r\n  const renderCells = () => {\r\n    const monthStart = startOfMonth(currentMonth);\r\n    const monthEnd = endOfMonth(monthStart);\r\n    const startDate = startOfWeek(monthStart, { weekStartsOn: 1 });\r\n    const endDate = endOfWeek(monthEnd);\r\n\r\n    const dateFormat = 'd';\r\n    const rows = [];\r\n\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = '';\r\n\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n        formattedDate = format(day, dateFormat);\r\n        const cloneDay = day;\r\n\r\n\r\n        const onDateClick = (day: Date | undefined) => {\r\n          history.push(`/day/${changeFormatDate(day)}`);\r\n          dispatch(fetchToDayData(day));\r\n          dispatch(toggleEditorOldContent(false));\r\n          dispatch(changeEditorContent(''));\r\n          dispatch(toggleActiveFillEditor(true));\r\n\r\n        };\r\n        const year = cloneDay.getFullYear();\r\n        const mount = cloneDay.getMonth() + 1;\r\n        const today = cloneDay.getDate();\r\n\r\n        const activitiesToday = allActivity.map((item: any) => {\r\n          return Object.keys(item).map(i => {\r\n            if (i === `${today}${mount}${year}`) {\r\n              const meditation = item[i].activity.includes('Meditation') ? (\r\n                <Brightness7Icon\r\n                  className={styles.activity}\r\n                  style={{ color: '#F6A4D5' }}\r\n                />\r\n              ) : null;\r\n\r\n              const yoga = item[i].activity.includes('Yoga') ? (\r\n                <SpaIcon style={{ color: '#F6A4D5' }} />\r\n              ) : null;\r\n\r\n              return (\r\n                <div key={i} className={`${styles.allActivity}`}>\r\n                  <span className={styles.activity}>{meditation}</span>\r\n                  <span className={styles.activity}>{yoga}</span>\r\n                </div>\r\n              );\r\n            }\r\n            return null\r\n          });\r\n        });\r\n\r\n        const notesToday = allNotesMonth.filter((item: any) => {\r\n         return item.date === `${today}${mount}${year}` && item.type === 'note' && item\r\n        });\r\n        const awarenesToday = allNotesMonth.filter((item: any) => {\r\n          return item.date === `${today}${mount}${year}` &&\r\n            typeof item.content === 'string' && item.type === 'awareness' && item\r\n\r\n        });\r\n\r\n        days.push(\r\n          <div\r\n            className={`${styles.col} ${styles.cell}\r\n              ${\r\n                !isSameMonth(day, monthStart)\r\n                  ? `disabled ${styles.disabled}`\r\n                  : isSameDay(day, selectedDate)\r\n                  ? `selected ${styles.selected}`\r\n                  : ''\r\n              }\r\n              ${isFuture(day) ? `disabled ${styles.disabled}` : ''}\r\n            `}\r\n            key={day.toString()}\r\n            onClick={() => onDateClick(cloneDay)}\r\n          >\r\n            <span className={`${styles.number}`}>{formattedDate}</span>\r\n            <span className={`${styles.activities}`}>{activitiesToday}</span>\r\n            {notesToday.length !== 0 ? <span className={`${styles.notesToday}`}>N: {notesToday.length}</span>: null}\r\n            {awarenesToday.length !== 0 ?<span className={`${styles.awarenesToday}`}>A: {awarenesToday.length}</span>: null}\r\n            <span className={`${styles.bg}`}>{formattedDate}</span>\r\n          </div>\r\n        );\r\n        day = addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div className={`${styles.row}`} key={day.toString()}>\r\n          {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return <div className={`${styles.body}`}>{rows}</div>;\r\n  };\r\n\r\n  const nextMonth = () => {\r\n    setCurrentMonth(addMonths(currentMonth, 1));\r\n  };\r\n\r\n  const prevMonth = () => {\r\n    setCurrentMonth(subMonths(currentMonth, 1));\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.calendar}`}>\r\n      {renderHeader()}\r\n      {renderDays()}\r\n      {renderCells()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { FC } from 'react';\r\nimport Calendar from '../component/calendar/Calendar';\r\n\r\nexport const Home: FC = (props) => {\r\n  return (\r\n    <div>\r\n      <section>\r\n        <Calendar {...props} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import { firebase, db, auth, setupPresence } from '../services/firebase';\nimport { useState, useEffect } from 'react';\n\nexport function signup(email, password) {\n  return auth().createUserWithEmailAndPassword(email, password);\n}\n\nexport function signin(email, password) {\n  return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function signInWithGoogle() {\n  const provider = new auth.GoogleAuthProvider();\n  return auth().signInWithPopup(provider);\n}\n\nexport function useAuth() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    return firebase.auth().onAuthStateChanged((firebaseUser) => {\n      if (firebaseUser) {\n        const user = {\n          displayName: firebaseUser.displayName,\n          photoUrl: firebaseUser.photoURL,\n          uid: firebaseUser.uid,\n        };\n        setUser(user);\n\n        db.collection('users').doc(user.uid).set(user, { merge: true });\n\n        setupPresence(user);\n      } else {\n        setUser(null);\n      }\n    });\n  }, []);\n  return user;\n}\n\n// export function signInWithGitHub() {\n//   const provider = new auth.GithubAuthProvider();\n//   return auth().signInWithPopup(provider);\n// }\n\n// export function logout() {\n//   return auth().signOut();\n// }\n","import React from 'react';\n\nexport const Footer = () => {\n  return (\n    <footer className=\"pt-5\">\n      <div className=\"container text-center\">\n        <p>&copy; Awiary 2020.</p>\n      </div>\n    </footer>\n  );\n};\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { signin, signInWithGoogle } from '../../helpers/auth';\r\nimport styles from './Sign.module.css';\r\nimport google from './google.svg';\r\nimport { Footer } from '../../component/Footer'\r\n\r\nexport const Login: FC = () => {\r\n  const [error, setError] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handleChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event: FormEvent) => {\r\n    event.preventDefault();\r\n    setError('');\r\n    try {\r\n      await signin(email, password);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const googleSignIn = async () => {\r\n    try {\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className={`container ${styles.wrapper}`}>\r\n      <form\r\n        className={`mt-5 py-5 px-5 ${styles.form_box}`}\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <h1 className={styles.header_block}>\r\n          Войти в\r\n          <Link className={`${styles.title} ml-2`} to=\"/\">\r\n            Awiary\r\n          </Link>\r\n        </h1>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            onChange={handleChangeEmail}\r\n            value={email}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            onChange={handleChangePassword}\r\n            value={password}\r\n            type=\"password\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          {error ? <p className=\"text-danger\">{error}</p> : null}\r\n          <button className={`${styles.submit} btn btn-primary px-5`} type=\"submit\">\r\n            Войти\r\n          </button>\r\n        </div>\r\n        <div className={styles.signGoogle}>\r\n          <p>Вы также можете авторизироваться через Google аккаунт</p>\r\n          <button\r\n            className=\"btn btn-danger mr-2\"\r\n            type=\"button\"\r\n            onClick={googleSignIn}\r\n          >\r\n            <img src={google} alt=\"Google\" />\r\n          </button>\r\n        </div>\r\n        <p>\r\n          <Link className={styles.signup} to=\"/signup\">\r\n            Зарегистрироваться\r\n          </Link>\r\n        </p>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n\r\n      </>\r\n  );\r\n};\r\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { signup, signInWithGoogle } from '../../helpers/auth';\r\nimport styles from './Sign.module.css';\r\nimport google from './google.svg';\r\n\r\nexport const SignUp: FC = () => {\r\n  const [error, setError] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChangeEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handleChangePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event: FormEvent) => {\r\n    event.preventDefault();\r\n    setError('');\r\n    try {\r\n      await signup(email, password);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const googleSignIn = async () => {\r\n    try {\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div className={`container ${styles.wrapper}`}>\r\n        <form\r\n            className={`mt-5 py-5 px-5 ${styles.form_box}`}\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit}\r\n        >\r\n          <h1 className={styles.header_block}>\r\n            Зарегистрироваться в\r\n            <Link className={`${styles.title} ml-2`} to=\"/\">\r\n              Awiary\r\n            </Link>\r\n          </h1>\r\n          <div className=\"form-group\">\r\n            <input\r\n                className=\"form-control\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                onChange={handleChangeEmail}\r\n                value={email}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n                className=\"form-control\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                onChange={handleChangePassword}\r\n                value={password}\r\n                type=\"password\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            {error ? <p className=\"text-danger\">{error}</p> : null}\r\n            <button className={`${styles.submit} btn btn-primary px-5`} type=\"submit\">\r\n              Зарегистрироваться\r\n            </button>\r\n          </div>\r\n          <div className={styles.signGoogle}>\r\n            <p>Вы также можете Зарегистрироваться через Google аккаунт</p>\r\n            <button\r\n                className=\"btn btn-danger mr-2\"\r\n                type=\"button\"\r\n                onClick={googleSignIn}\r\n            >\r\n              <img src={google} alt=\"Google\" />\r\n            </button>\r\n          </div>\r\n          <p>\r\n            <Link className={styles.signup} to=\"/login\">\r\n              Войти\r\n            </Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport styles from './spiner.module.css'\r\n\r\nexport const Spinner = () => {\r\n\r\n  return (\r\n    <div className={styles.spinner}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n","import { auth, db, setupPresence } from '../services/firebase';\r\n\r\nimport { BaseThunkType, InferActionsTypes } from './index';\r\nimport { resetNotes } from './noteReducer'\r\n\r\nconst initialState = {\r\n  uid: '' as string,\r\n  email: null as string | null,\r\n  displayName: null as string | null,\r\n  photoUrl: null as string | null,\r\n  loading: true as boolean,\r\n  isAuth: false as boolean,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    case 'AW/AUTH/SET_USER_DATA':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  setAuthUserData: (\r\n    uid: string,\r\n    email: string | null,\r\n    displayName: string | null,\r\n    photoUrl: string | null,\r\n    loading: boolean,\r\n    isAuth: boolean\r\n  ) =>\r\n    ({\r\n      type: 'AW/AUTH/SET_USER_DATA',\r\n      payload: {\r\n        uid,\r\n        email,\r\n        displayName,\r\n        photoUrl,\r\n        loading,\r\n        isAuth,\r\n      },\r\n    } as const),\r\n};\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n  auth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      dispatch(\r\n        actions.setAuthUserData(\r\n          user.uid,\r\n          user.email,\r\n          user.displayName,\r\n          user.photoURL,\r\n          false,\r\n          true,\r\n        )\r\n      );\r\n\r\n      const userFirebase = {\r\n        displayName: user.displayName,\r\n        photoUrl: user.photoURL,\r\n        uid: user.uid,\r\n      };\r\n\r\n      db.collection('users').doc(user.uid).set(userFirebase, { merge: true });\r\n\r\n      setupPresence(user);\r\n    } else {\r\n      dispatch(actions.setAuthUserData('', null, null, null, false, false));\r\n    }\r\n  });\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n\r\n  auth()\r\n    .signOut()\r\n    .then(() => {\r\n      dispatch(actions.setAuthUserData('', null, null, null, false, false));\r\n      dispatch(resetNotes())\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsType>;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport logo from './logo.svg';\r\nimport icon from './signOut.svg';\r\nimport styles from './header.module.css';\r\n\r\nimport { logout } from '../../store/authReducer';\r\nimport { AppStateType } from '../../store';\r\nimport { changeFormatDate } from '../../helpers/changeFormatDate';\r\nimport { changeTypePage } from '../../store/noteReducer'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const selectedDate = useSelector(\r\n    (state: AppStateType) => state.calendar.selectedDate,\r\n  );\r\n\r\n  const data = selectedDate ? changeFormatDate(selectedDate, '/') : changeFormatDate(new Date(), '/')\r\n\r\n  const changeType = (type: string) => {\r\n    dispatch(changeTypePage(type))\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <div className={styles.headerContainer}>\r\n        <div className={styles.headerLogo}>\r\n          <Link to=\"/\">\r\n            <img className={styles.logo} src={logo} alt=\"Awiary\" />\r\n          </Link>\r\n        </div>\r\n        <div className={styles.headerDate}>\r\n          {data}\r\n        </div>\r\n        <div className={styles.headerNavigationBlock}>\r\n          <nav className={styles.headerNavigation}>\r\n            <Link className={styles.headerNavigationItem} to=\"/\">\r\n              Календарь\r\n            </Link>\r\n            <Link\r\n              className={`${styles.headerNavigationItem} ${styles.headerNavigationItemCenter}`}\r\n              to=\"/note\"\r\n              onClick={() => changeType('note')}\r\n            >\r\n              Заметки\r\n            </Link>\r\n            <Link className={styles.headerNavigationItem} to=\"/awareness\" onClick={() => changeType('awareness')}>\r\n              Осознания\r\n            </Link>\r\n          </nav>\r\n          <Link\r\n            onClick={() => dispatch(logout())}\r\n            className={styles.headerLogout}\r\n            to=\"/\"\r\n          >\r\n            <img src={icon} alt=\"error icon\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport Header from '../component/header/Header'\r\n\r\nexport function PrivateRoute({ component: Component, authenticated, ...rest }) {\r\n  const history = createBrowserHistory();\r\n  return (\r\n    <Route\r\n      history={history}\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === true ? (\r\n          <>\r\n            <Header />\r\n            <Component {...props} />\r\n          </>\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: '/login', state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport function PublicRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === false ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","export const validateContent = (content) => {\r\n  let text = content\r\n  if (text && text.length > 0) {\r\n    text = text.replace(/<(?:.|\\n)*?>/gm, '').replace('&nbsp;', '').trim()\r\n    text = text.length ? text.split(/\\s+/).length : 0\r\n  } else {\r\n    text = 0\r\n  }\r\n  // if (text === 0) {\r\n  //   dispatch(changeEditorContent(''))\r\n  // }\r\n}\r\n","import React, { FC } from 'react'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport Backdrop from '@material-ui/core/Backdrop'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport Button from '@material-ui/core/Button'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nimport {\r\n  toggleActiveFillEditor,\r\n  toggleActiveModal,\r\n  toggleEditorOldContent,\r\n} from '../../store/editorReducer'\r\nimport { addNewNote, updateNote } from '../../store/noteReducer'\r\nimport { AppStateType } from '../../store'\r\nimport { validateContent } from '../../helpers/validateContent'\r\nimport styles from './modal.module.css'\r\n\r\nexport const SuccessEditModal: FC = () => {\r\n  const dispatch = useDispatch()\r\n  const activeModal = useSelector((state: AppStateType) => state.editor.activeModal)\r\n  const content = useSelector((state: AppStateType) => state.editor.content)\r\n  const key = useSelector((state: AppStateType) => state.editor.key)\r\n  const handleEdit = async () => {\r\n    validateContent(content)\r\n    dispatch(updateNote(content, key))\r\n    dispatch(toggleActiveModal(false))\r\n    dispatch(toggleActiveFillEditor(false))\r\n    dispatch(toggleEditorOldContent(false))\r\n  }\r\n\r\n  const handleCreateNote = async () => {\r\n    validateContent(content)\r\n    if (content !== '') {\r\n      dispatch(addNewNote(content))\r\n      dispatch(toggleActiveModal(false))\r\n      dispatch(toggleEditorOldContent(false))\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    dispatch(toggleActiveModal(false))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={styles.modal}\r\n        open={activeModal}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={activeModal}>\r\n          <div className={styles.paper}>\r\n            <h2 id=\"transition-modal-title\">Выберите</h2>\r\n            <p id=\"transition-modal-description\">\r\n              Какие действие вы хотите сделать\r\n            </p>\r\n            <div className=\"buttonGroup\">\r\n              <Button variant=\"contained\" color=\"primary\"   onClick={handleEdit}>\r\n                Изменить\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"default\" onClick={handleCreateNote}>\r\n                Создать новый\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport SunEditor from 'suneditor-react'\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'suneditor/dist/css/suneditor.min.css'\nimport { changeEditorContent, saveContent } from '../../store/editorReducer'\nimport useShallowEqualSelector from '../../hooks/useShallowEqualSelector'\nimport { AppStateType } from '../../store'\n\nconst Editor = () => {\n  const content = useShallowEqualSelector((state: AppStateType) => state.editor.content)\n  const activeFillEditor = useShallowEqualSelector((state) => state.editor.activeFillEditor)\n  const dispatch = useDispatch()\n\n  const handleChange = (text: string) => {\n    dispatch(changeEditorContent(text))\n  }\n\n  const handleSaveContent = (text: string) => {\n    dispatch(saveContent(text))\n  }\n  return (\n    <SunEditor\n      hide={activeFillEditor}\n      setContents={content}\n      onChange={handleChange}\n      lang=\"ru\"\n      setOptions={{\n        showPathLabel: false,\n        maxCharCount: 720,\n        width: '100%',\n        height: 'auto',\n        minHeight: '100px',\n        maxHeight: '250px',\n        buttonList: [\n          ['undo', 'redo', 'formatBlock'],\n          ['bold', 'underline', 'italic', 'strike'],\n          ['fontColor', 'hiliteColor', 'outdent', 'indent', 'align', 'horizontalRule', 'list', 'table'],\n          ['link', 'image', 'fullScreen', 'showBlocks', 'codeView', 'preview', 'print', 'save']\n        ],\n\n        callBackSave: (text) => handleSaveContent(text),\n      }}\n    />\n  )\n}\n\nexport default Editor\n","import ReactHtmlParser from 'react-html-parser'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport React, {\r\n  FC, useCallback,\r\n} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport styles from '../messages/messages.module.css'\r\nimport {\r\n  activeStateEditor,\r\n  changeEditorContent,\r\n  changeSelectedType,\r\n  setKey,\r\n  toggleActiveFillEditor,\r\n} from '../../store/editorReducer'\r\nimport { deleteNote, changeItemDate } from '../../store/noteReducer'\r\nimport { shouldShowDay } from '../../helpers/shouldShowDay'\r\nimport { changeFormatDate } from '../../helpers/changeFormatDate'\r\n\r\nexport type PropsMessageItem = {\r\n  note: {\r\n    id: number;\r\n    key: string;\r\n    type: string;\r\n    content: string;\r\n    date: string;\r\n    createdAt?: {seconds: number};\r\n  };\r\n  previous?: {createdAt: {seconds: number}; date: string};\r\n  isAll?: boolean | undefined;\r\n}\r\n\r\nexport const MessageItem: FC<PropsMessageItem> = ({ note, previous, isAll }: PropsMessageItem) => {\r\n  const dispatch = useDispatch()\r\n  const date = new Date()\r\n  date.setTime(note.id)\r\n\r\n  const showDay = shouldShowDay(previous, note)\r\n  const showDate = changeFormatDate(new Date(note.id), '/')\r\n\r\n  const editorContent = useCallback(\r\n    (text, key, type, itemDate) => {\r\n      dispatch(changeSelectedType(type))\r\n      dispatch(changeItemDate(itemDate))\r\n      dispatch(activeStateEditor(true))\r\n      dispatch(toggleActiveFillEditor(false))\r\n      dispatch(changeEditorContent(text))\r\n      dispatch(setKey(key))\r\n    },\r\n    [dispatch],\r\n  )\r\n  const removeContent = useCallback(\r\n    async (key, type, dateItem) => {\r\n      dispatch(deleteNote(key, type, dateItem))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  let DateBlock = <div className={styles.date_item}>{showDate}</div>\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.message_item}>\r\n        <div\r\n          className={`${styles.message_item_box} ${\r\n            note.type === 'note' ? styles.class_note : styles.class_awareness\r\n          }`}\r\n        >\r\n          <span className={styles.message_time}>\r\n            {(date.getHours() === 0 ? '0' : '') + date.getHours() }\r\n            :\r\n            { (date.getMinutes() < 10 ? '0' : '') + date.getMinutes()}\r\n          </span>\r\n\r\n          <article className={`${styles.message_text}`}>\r\n            {ReactHtmlParser(note.content)}\r\n          </article>\r\n\r\n        </div>\r\n        <div className={styles.message_remote}>\r\n          <EditIcon\r\n            className={styles.message_editor}\r\n            onClick={() => editorContent(note.content, note.key, note.type, note.date)}\r\n          />\r\n\r\n          <DeleteIcon\r\n            className={styles.message_remove}\r\n            onClick={() => removeContent(note.key, note.type, note.date)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles.date_item_container}>{ isAll && showDay && DateBlock }</div>\r\n    </>\r\n  )\r\n}\r\n","import isSameDay from \"date-fns/isSameDay\"\r\n\r\nexport function shouldShowDay(previous: any, message: any) {\r\n\r\n\r\n  const isFirst = !previous\r\n  if (isFirst) {\r\n    return true\r\n  }\r\n\r\n  const isNewDay = !isSameDay(\r\n    previous.createdAt.seconds * 1000,\r\n    message.createdAt.seconds * 1000,\r\n  )\r\n\r\n  return isNewDay\r\n}\r\n","import React from 'react'\r\n\r\nimport useShallowEqualSelector from '../../hooks/useShallowEqualSelector'\r\nimport { MessageItem } from '../messageItem/MessageItem'\r\nimport styles from './messages.module.css'\r\n\r\nexport const Messages = () => {\r\n  const content = useShallowEqualSelector((state) => state.notes.todayNotes)\r\n  const activeFillEditor = useShallowEqualSelector(\r\n    (state) => state.editor.activeFillEditor)\r\n\r\n  return (\r\n    <div className={`${styles.messages_area} ${!activeFillEditor\r\n      ? styles.messages_area_active_editor\r\n      : ''} `}\r\n    >\r\n      {content.map((note: {\r\n        id: number;\r\n        type: string;\r\n        content: string;\r\n        key: string;\r\n        date: string;\r\n      }) => {\r\n        return (\r\n          <MessageItem\r\n            key={note.id}\r\n            note={note}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport { purple } from '@material-ui/core/colors'\r\nimport React, { useCallback } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport {\r\n  changeEditorContent,\r\n  changeSelectedType,\r\n  toggleActiveFillEditor,\r\n  toggleEditorOldContent\r\n} from \"../../store/editorReducer\"\r\nimport useShallowEqualSelector from \"../../hooks/useShallowEqualSelector\";\r\nimport styles from './editorPanel.module.css';\r\n\r\nexport const EditorPanel = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const select = useShallowEqualSelector((state) => state.editor.selectedType);\r\n  const activeFillEditor = useShallowEqualSelector((state) => state.editor.activeFillEditor);\r\n\r\n  const selectedType = useCallback((selected) => {\r\n    dispatch(changeSelectedType(selected))\r\n    dispatch(toggleActiveFillEditor(false))\r\n  }, [dispatch])\r\n\r\n  const handelHideEditor = useCallback((value) => {\r\n    dispatch(toggleActiveFillEditor(true))\r\n    dispatch(toggleEditorOldContent(false))\r\n    dispatch(changeEditorContent(''))\r\n  }, [dispatch])\r\n\r\n  const handelClearEditor = useCallback(() => {\r\n    dispatch(toggleEditorOldContent(false))\r\n    dispatch(changeEditorContent(''))\r\n  }, [dispatch])\r\n\r\n  const NoteButton = withStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText(purple[500]),\r\n      backgroundColor: select === 'note' ? '#B6A6F7' : 'default',\r\n      '&:hover': {\r\n        opacity: '0.8',\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  const AwarenessButton = withStyles((theme) => ({\r\n    root: {\r\n      color: theme.palette.getContrastText(purple[500]),\r\n      backgroundColor: select === 'note' ? 'default' : '#F6A4D5',\r\n      '&:hover': {\r\n        opacity: '0.8',\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  const CleanButton = withStyles((theme) => ({\r\n    root: {\r\n      color: \"#4F68A2\",\r\n      backgroundColor: \"#ffffff\",\r\n      border: \"1px solid #4F68A2\",\r\n      '&:hover': {\r\n        opacity: \"0.8\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  const HiddenButton = withStyles((theme) => ({\r\n    root: {\r\n      color: \"#4F68A2\",\r\n      backgroundColor: \"#ffffff\",\r\n      border: \"1px solid #4F68A2\",\r\n      '&:hover': {\r\n        opacity: \"0.8\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  return (\r\n    <div className={styles.editor_panel}>\r\n      <div className={styles.editor_panel_group}>\r\n        <NoteButton variant=\"contained\" color=\"default\"\r\n                    onClick={() => selectedType(\"note\")}>Заметка</NoteButton>\r\n        <AwarenessButton variant=\"contained\" color=\"default\"\r\n                         onClick={() => selectedType(\"awareness\")}>Осознание</AwarenessButton>\r\n      </div>\r\n      {!activeFillEditor && (<div className={styles.editor_panel_group}>\r\n        <CleanButton color=\"default\"\r\n                     onClick={handelClearEditor}>Очистить</CleanButton>\r\n        <HiddenButton color=\"default\"\r\n                      onClick={handelHideEditor}>Скрыть</HiddenButton>\r\n      </div>)}\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport { SuccessEditModal } from '../modal/Modal';\nimport Editor from '../editor/Editor';\nimport { Messages } from '../messages/Messages';\nimport { EditorPanel } from '../editorPanel/EditorPanel';\nimport useShallowEqualSelector from '../../hooks/useShallowEqualSelector';\nimport { changeFormatDate } from '../../helpers/changeFormatDate';\nimport styles from './note.module.css';\n\nexport const Note = () => {\n  const selectedDate = useShallowEqualSelector((state) =>\n    changeFormatDate(state.calendar.selectedDate, ''));\n  const today = changeFormatDate(new Date(), '');\n  const activeEditor = useShallowEqualSelector(\n    (state) => state.editor.activeEditor\n  );\n\n  if (today === selectedDate || activeEditor) {\n    return (\n      <>\n        <SuccessEditModal />\n        <Messages />\n        <div className={styles.editor}>\n          <EditorPanel />\n          <Editor />\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <SuccessEditModal />\n      <Messages />\n    </>\n  );\n};\n","import { BaseThunkType, InferActionsTypes } from './index';\r\nimport { changeFormatDate } from '../helpers/changeFormatDate';\r\nimport { db } from '../services/firebase';\r\n\r\nconst initialState = {\r\n  thunk: '',\r\n  thought: '',\r\n  errorThanks: '' as string,\r\n};\r\n\r\nexport const thunksDayReducer = (state = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    case 'AW/NOTE/FETCH_THANKS_DAY':\r\n    case 'AW/NOTE/FETCH_THANKS_FAILURE':\r\n    case 'AW/NOTE/REQUEST_THANKS':\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  thunksError: (error: string) =>\r\n    ({\r\n      type: 'AW/NOTE/FETCH_THANKS_FAILURE',\r\n      payload: {\r\n        errorThanks: error,\r\n      },\r\n    } as const),\r\n  getThunksToday: (thunk: string, thought: string) =>\r\n    ({\r\n      type: 'AW/NOTE/FETCH_THANKS_DAY',\r\n      payload: {\r\n        thunk,\r\n        thought,\r\n        errorThanks: '',\r\n      },\r\n    } as const),\r\n  requestThoughtToday: () =>\r\n    ({\r\n      type: 'AW/NOTE/REQUEST_THANKS',\r\n      payload: {\r\n        thunk: '',\r\n        thought: '',\r\n        errorThanks: '',\r\n      },\r\n    } as const),\r\n};\r\n\r\nexport const requestDataThanks = (): ThunkType => async (dispatch) => {\r\n  dispatch(actions.requestThoughtToday())\r\n}\r\n\r\nexport const fetchToDayThanks = (): ThunkType => async (dispatch, getState) => {\r\n\r\n  const selectedDate = changeFormatDate(getState().calendar.selectedDate, '');\r\n  const userUid = getState().auth.uid;\r\n  try {\r\n\r\n    const arrThunk = await db\r\n      .collection(`${userUid}/${selectedDate}/thunks/`)\r\n      .get();\r\n\r\n    let thunks: any = ''\r\n    let thought: any = ''\r\n    arrThunk.forEach((doc) => {\r\n      if (doc.id === 'thunks') {\r\n        if (doc.data().content) {\r\n          thunks = doc.data().content\r\n        } else {\r\n          thunks = ''\r\n        }\r\n      }\r\n\r\n      if (doc.id === 'thought') {\r\n        if (doc.data().content) {\r\n          thought = doc.data().content\r\n        } else {\r\n          thought = ''\r\n        }\r\n      }\r\n    })\r\n\r\n    dispatch(actions.getThunksToday(thunks, thought));\r\n  } catch (error) {\r\n    dispatch(actions.thunksError(error));\r\n  }\r\n};\r\n\r\nexport const addThanks = (content: string, type: string): ThunkType => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const selectedDate = changeFormatDate(getState().calendar.selectedDate, '');\r\n  const today = changeFormatDate(new Date(), '');\r\n  const userUid: string = getState().auth.uid;\r\n\r\n  if (today !== selectedDate) {\r\n    return;\r\n  }\r\n\r\n  const thunksRef = db\r\n    .collection(userUid)\r\n    .doc(selectedDate)\r\n    .collection('thunks')\r\n    .doc(type);\r\n\r\n  try {\r\n    await thunksRef.set({\r\n      content,\r\n    });\r\n  } catch (error) {\r\n    dispatch(actions.thunksError(error));\r\n  }\r\n  dispatch(fetchToDayThanks());\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsType>;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  format,\r\n  startOfWeek,\r\n  endOfMonth,\r\n  addDays,\r\n  startOfMonth,\r\n  endOfWeek,\r\n  isSameMonth,\r\n  isSameDay,\r\n  addMonths,\r\n  subMonths,\r\n  isFuture,\r\n} from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\n\r\nimport styles from './sidebarCalendar.module.css';\r\nimport { changeFormatDate } from '../../helpers/changeFormatDate';\r\nimport { fetchToDayData } from '../../store/calendarReducer';\r\nimport {\r\n  changeEditorContent,\r\n  toggleActiveFillEditor,\r\n  toggleEditorOldContent,\r\n} from '../../store/editorReducer';\r\nimport { fetchToDayActivity } from '../../store/activityReducer';\r\nimport {fetchToDayThanks} from \"../../store/thunksDayReducer\";\r\n\r\nclass Calendar extends React.Component {\r\n  state = {\r\n    currentMonth: new Date(),\r\n  };\r\n\r\n  renderHeader() {\r\n    const dateFormat = 'MMMM yyyy';\r\n    return (\r\n      <div className={`${styles.header} ${styles.row}`}>\r\n        <div className={`${styles.col} ${styles.colStart}`}>\r\n          <div className={`${styles.icon}`} onClick={this.prevMonth}>\r\n            chevron_left\r\n          </div>\r\n        </div>\r\n        <div className={`${styles.col}  ${styles.colCenter}`}>\r\n          <span>\r\n            {format(this.state.currentMonth, dateFormat, { locale: ru })}\r\n          </span>\r\n        </div>\r\n        <div\r\n          className={`${styles.col} ${styles.colEnd}`}\r\n          onClick={this.nextMonth}\r\n        >\r\n          <div className={`${styles.icon}`}>chevron_right</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDays() {\r\n    const dateFormat = 'EEE';\r\n    const days = [];\r\n    let startDate = startOfWeek(this.state.currentMonth);\r\n    for (let i = 0; i < 7; i++) {\r\n      let dayWek = format(addDays(startDate, i), dateFormat, { locale: ru });\r\n      days.push(\r\n        <div\r\n          className={`${styles.col} ${styles.colCenter} ${styles.dayWek}`}\r\n          key={i}\r\n        >\r\n          {dayWek}\r\n        </div>\r\n      );\r\n    }\r\n    return <div className={`${styles.days} ${styles.row}`}>{days}</div>;\r\n  }\r\n\r\n  renderCells() {\r\n    const { currentMonth } = this.state;\r\n    const { selectedDate } = this.props;\r\n    const monthStart = startOfMonth(currentMonth);\r\n    const monthEnd = endOfMonth(monthStart);\r\n    const startDate = startOfWeek(monthStart);\r\n    const endDate = endOfWeek(monthEnd);\r\n\r\n    const dateFormat = 'd';\r\n    const rows = [];\r\n\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = '';\r\n\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n        formattedDate = format(day, dateFormat);\r\n        const cloneDay = day;\r\n\r\n        days.push(\r\n          <div\r\n            className={`${styles.col} ${styles.cell}\r\n              ${\r\n                !isSameMonth(day, monthStart)\r\n                  ? `disabled ${styles.disabled}`\r\n                  : isSameDay(day, new Date())\r\n                  ? `selected ${styles.selected}`\r\n                  : ''\r\n              }\r\n              ${isSameDay(day, selectedDate) ? styles.selectedDay : ''}\r\n              ${isFuture(day) ? `disabled ${styles.disabled}` : ''}\r\n            }`}\r\n            key={day}\r\n            onClick={() => this.onDateClick(cloneDay)}\r\n          >\r\n            <span className={`${styles.number}`}>{formattedDate}</span>\r\n\r\n            <span className={`${styles.bg}`}></span>\r\n          </div>\r\n        );\r\n        day = addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div className={`${styles.row}`} key={day}>\r\n          {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return <div className={`${styles.body}`}>{rows}</div>;\r\n  }\r\n\r\n  onDateClick = (day) => {\r\n    this.props.history.push(`/day/${changeFormatDate(day)}`);\r\n    this.props.fetchToDayData(day);\r\n    this.props.toggleEditorOldContent(false);\r\n    this.props.changeEditorContent('');\r\n    this.props.toggleActiveFillEditor(true);\r\n    this.props.fetchToDayActivity();\r\n    this.props.fetchToDayThanks();\r\n  };\r\n\r\n  nextMonth = () => {\r\n    this.setState({\r\n      currentMonth: addMonths(this.state.currentMonth, 1),\r\n    });\r\n  };\r\n\r\n  prevMonth = () => {\r\n    this.setState({\r\n      currentMonth: subMonths(this.state.currentMonth, 1),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={`${styles.calendar}`}>\r\n        {this.renderHeader()}\r\n        {this.renderDays()}\r\n        {this.renderCells()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedDate: state.calendar.selectedDate\r\n    // loadingSmiles: state.smile.loadingSmiles,\r\n    // errorSmiles: state.smile.errorSmiles,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchToDayData,\r\n  toggleEditorOldContent,\r\n  changeEditorContent,\r\n  toggleActiveFillEditor,\r\n  fetchToDayActivity,\r\n  fetchToDayThanks,\r\n})(withRouter(Calendar));\r\n","import React, { useEffect, useState, ChangeEvent, FC } from 'react';\nimport SaveIcon from '@material-ui/icons/Save';\nimport styles from './inputDay.module.css';\nimport { useDispatch } from 'react-redux';\n\nimport { addThanks, fetchToDayThanks } from './../../store/thunksDayReducer';\nimport { isSameDay } from 'date-fns';\n\ntype PropsType = {\n  title: string;\n  type: string;\n  value: string;\n  selectedDate: Date;\n};\n\nexport const InputDay: FC<PropsType> = ({\n  title,\n  type,\n  value,\n  selectedDate,\n}) => {\n  const [text, setText] = useState('');\n  const [editMode, setEditMode] = useState(true);\n  const [hadChange, setHadChange] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchToDayThanks());\n    setText(value);\n    if (value) {\n      setEditMode(false);\n    } else {\n      setEditMode(true);\n    }\n  }, [dispatch, value]);\n\n  const changeText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n    if (text !== value) {\n      setHadChange(true);\n    }\n  };\n\n  const activeEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deActiveEditMode = () => {\n    dispatch(addThanks(text, type));\n    setEditMode(false);\n    setHadChange(false);\n  };\n  if (editMode && isSameDay(selectedDate, new Date())) {\n    return (\n      <div className={styles.blockInput}>\n        <p className={styles.inputTitle}>{title}</p>\n        <textarea\n          className={styles.input}\n          rows={3}\n          value={text}\n          onChange={changeText}\n          autoFocus\n        >\n          {' '}\n        </textarea>\n\n        <SaveIcon\n          className={styles.save}\n          onClick={deActiveEditMode}\n          style={hadChange ? { color: '#3f51b5' } : { color: '#AFBAD1' }}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.blockInput}>\n      <p className={styles.inputTitle}>{title}</p>\n      <div onClick={activeEditMode}>\n        <p className={styles.showText}>{text}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\n\r\nimport SpaOutlinedIcon from '@material-ui/icons/SpaOutlined';\r\nimport SpaIcon from '@material-ui/icons/Spa';\r\n\r\nimport styles from './activityEvent.module.css';\r\n\r\nimport {\r\n  addActivity,\r\n  removeActivity,\r\n  fetchToDayActivity,\r\n} from '../../store/activityReducer';\r\n\r\nexport const ActivityEvent: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const todayActivity = useSelector(\r\n    (state: {active: {todayActivity: any}}) => state.active.todayActivity\r\n  );\r\n\r\n  const activeMeditation =\r\n    todayActivity && todayActivity.includes('Meditation');\r\n  const activeYoga = todayActivity && todayActivity.includes('Yoga');\r\n\r\n  useEffect(() => {\r\n  dispatch(fetchToDayActivity());\r\n  }, [dispatch]);\r\n\r\n  const handleActive = (name: string) => {\r\n    const active = todayActivity.includes(name);\r\n    if (active) {\r\n      dispatch(removeActivity(name));\r\n    } else {\r\n      dispatch(addActivity(name));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.actionBox}>\r\n      <div\r\n        className={styles.actionItem}\r\n        onClick={() => handleActive('Meditation')}\r\n      >\r\n        {activeMeditation ? (\r\n          <Brightness7Icon style={{ color: '#F6A4D5' }} />\r\n        ) : (\r\n          <Brightness5Icon style={{ color: '#AFBAD1' }} />\r\n        )}\r\n        <p className={styles.actionText}>Meditation</p>\r\n      </div>\r\n      <div className={styles.actionItem} onClick={() => handleActive('Yoga')}>\r\n        {activeYoga ? (\r\n          <SpaIcon style={{ color: '#F6A4D5' }} />\r\n        ) : (\r\n          <SpaOutlinedIcon style={{ color: '#AFBAD1' }} />\r\n        )}\r\n        <p className={styles.actionText}>Yoga</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport styles from './sidebar.module.css';\r\nimport SidebarCalendar from '../sidebarCalendar/SidebarCalendar';\r\nimport { InputDay } from '../inputDay/InputDay';\r\nimport { ActivityEvent } from '../activityEvent/ActivityEvent';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../store';\r\n\r\nexport const Sidebar: FC = () => {\r\n  const selectedDate = useSelector(\r\n    (state: AppStateType) => state.calendar.selectedDate\r\n  );\r\n  const thunksValue = useSelector((state: AppStateType) => state.thunks.thunk);\r\n\r\n  const thoughtValue = useSelector(\r\n    (state: AppStateType) => state.thunks.thought\r\n  );\r\n  return (\r\n    <div className={styles.pageDaySideBar}>\r\n      <SidebarCalendar />\r\n      <InputDay\r\n        title=\"Мысль дня:\"\r\n        type=\"thought\"\r\n        value={thoughtValue}\r\n        selectedDate={selectedDate}\r\n      />\r\n      <InputDay\r\n        title=\"Благодарность:\"\r\n        type=\"thunks\"\r\n        value={thunksValue}\r\n        selectedDate={selectedDate}\r\n      />\r\n      <ActivityEvent />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './day.module.css';\r\nimport { AppStateType } from '../../store';\r\nimport { getNotesSelectedDay } from '../../store/noteReducer';\r\nimport { Note } from '../../component/note/Note';\r\nimport { fetchToDayThanks } from '../../store/thunksDayReducer';\r\nimport {Sidebar} from \"../../component/sidebar/Sidebar\";\r\n\r\nexport const Day: FC = () => {\r\n  const selectedDate = useSelector(\r\n    (state: AppStateType) => state.calendar.selectedDate\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getNotesSelectedDay());\r\n    dispatch(fetchToDayThanks());\r\n  }, [dispatch]);\r\n\r\n  if (selectedDate === null) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.pageDay}>\r\n      <div className={styles.pageDayContent}>\r\n        <Note />\r\n      </div>\r\n     <Sidebar />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, MutableRefObject, useEffect, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport {\r\n  getAllNotes,\r\n  getNotesSelectedDay,\r\n} from '../../store/noteReducer'\r\nimport useShallowEqualSelector from '../../hooks/useShallowEqualSelector'\r\nimport styles from './allMessages.module.css'\r\nimport { AppStateType } from '../../store'\r\nimport { fetchToDayThanks } from '../../store/thunksDayReducer'\r\nimport { MessageItem } from '../messageItem/MessageItem'\r\nimport { Spinner } from '../spinner/Spinner'\r\n\r\n\r\nexport const AllMessages: FC = (props) => {\r\n  const [elHeight, setElHeight] = useState<boolean>(true)\r\n\r\n  const activeFillEditor = useShallowEqualSelector(\r\n    (state: AppStateType) => state.editor.activeFillEditor,\r\n  )\r\n  const allNotes = useShallowEqualSelector(\r\n    (state: AppStateType) => state.notes.allNotes,\r\n  )\r\n  const allAwareness = useShallowEqualSelector(\r\n    (state: AppStateType) => state.notes.allAwareness,\r\n  )\r\n  const runOutOfNotes = useShallowEqualSelector(\r\n    (state: AppStateType) => state.notes.runOutOfNotes,\r\n  )\r\n\r\n  const overlayEl = useRef() as MutableRefObject<HTMLDivElement>;\r\n  const childrenOverlayEl = useRef() as MutableRefObject<HTMLDivElement>;\r\n  const inverse = true\r\n  const isAll = true\r\n  const dispatch = useDispatch()\r\n  const useHistory = useLocation();\r\n  const pathWithSlash = useHistory.pathname.substring(1)\r\n  let allItems = pathWithSlash === 'note' ? allNotes : allAwareness\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getNotesSelectedDay())\r\n    dispatch(fetchToDayThanks())\r\n    dispatch(getAllNotes(pathWithSlash))\r\n  }, [dispatch, pathWithSlash])\r\n\r\n  useEffect(() => {\r\n    setElHeight(overlayEl.current.clientHeight > childrenOverlayEl.current.clientHeight)\r\n  }, [allNotes, allAwareness, overlayEl, childrenOverlayEl])\r\n\r\n  return (\r\n    <div\r\n      ref={overlayEl}\r\n      className={`${styles.messages_area} \r\n      ${!activeFillEditor ? styles.messages_area_active_editor : ''} \r\n      ${elHeight ? styles.column : styles.column_reverse}\r\n      `}\r\n      id=\"scrollableDiv\"\r\n      style={{\r\n        overflow: 'auto',\r\n        display: 'flex',\r\n        // flexDirection: 'column-reverse',\r\n      }}\r\n    >\r\n      <div\r\n\r\n        ref={childrenOverlayEl}\r\n\r\n      >\r\n      <InfiniteScroll\r\n        dataLength={allItems.length}\r\n        next={() => dispatch(getAllNotes(pathWithSlash))}\r\n        style={{ display: 'flex', flexDirection: 'column-reverse' }}\r\n        inverse={inverse}\r\n        hasMore={runOutOfNotes}\r\n        loader={<h4><Spinner/></h4>}\r\n        scrollableTarget=\"scrollableDiv\"\r\n      >\r\n\r\n      { allItems && allItems.map(\r\n        (note:\r\n           {\r\n             id: number;\r\n             type: string;\r\n             content: string;\r\n             key: string;\r\n             date: string;\r\n             createdAt: {seconds: number}\r\n           }, index) => {\r\n          const previous = allItems[index + 1]\r\n          return (\r\n            <MessageItem\r\n              key={note.key}\r\n              note={note}\r\n              previous={previous}\r\n              isAll={isAll}\r\n            />\r\n          )\r\n        },\r\n      )}\r\n      </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { FC, useCallback, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { getNotesSelectedDay } from '../../store/noteReducer';\r\nimport { fetchToDayThanks } from '../../store/thunksDayReducer';\r\nimport { Sidebar } from '../../component/sidebar/Sidebar';\r\nimport { SuccessEditModal } from '../../component/modal/Modal';\r\nimport Editor from '../../component/editor/Editor';\r\nimport { AllMessages } from '../../component/allMessages/AllMessages';\r\n\r\nimport {\r\n  changeEditorContent,\r\n  toggleActiveFillEditor,\r\n  toggleEditorOldContent,\r\n} from '../../store/editorReducer';\r\nimport useShallowEqualSelector from '../../hooks/useShallowEqualSelector';\r\nimport styles from './notes.module.css';\r\n\r\nexport const Notes: FC = () => {\r\n  const activeFillEditor = useShallowEqualSelector(\r\n    (state) => state.editor.activeFillEditor\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getNotesSelectedDay());\r\n    dispatch(fetchToDayThanks());\r\n  }, [dispatch]);\r\n\r\n  const handelHideEditor = useCallback(\r\n    (value) => {\r\n      dispatch(toggleActiveFillEditor(true));\r\n      dispatch(toggleEditorOldContent(false));\r\n      dispatch(changeEditorContent(''));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <div className={styles.pageDay}>\r\n      <div className={styles.pageDayContent}>\r\n        <SuccessEditModal />\r\n        <AllMessages />\r\n        <div className={styles.editor}>\r\n          {!activeFillEditor && (\r\n            <Button className={styles.button} color=\"default\" onClick={handelHideEditor}>\r\n              Скрыть\r\n            </Button>\r\n          )}\r\n          <Editor />\r\n        </div>\r\n      </div>\r\n      <Sidebar />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useEffect } from 'react';\nimport { Switch } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Home } from './pages/Home';\nimport { Login } from './pages/Sign/Login';\nimport { SignUp } from './pages/Sign/Signup';\nimport { Spinner } from './component/spinner/Spinner';\nimport { getAuthUserData } from './store/authReducer';\nimport { AppStateType } from './store';\nimport { PrivateRoute, PublicRoute } from './helpers/customRoute';\nimport { Day } from './pages/Day/Day';\nimport { Notes } from './pages/Notes/Notes';\nimport styles from './App.module.css';\n\nconst App: FC = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAuthUserData());\n  }, [dispatch]);\n\n  const loading = useSelector((state: AppStateType) => state.auth.loading);\n  const isAuth = useSelector((state: AppStateType) => state.auth.isAuth);\n\n  if (loading === true) {\n    return <Spinner />;\n  }\n\n  return (\n    <Container className={styles.container} maxWidth=\"xl\">\n      <Switch>\n        <PrivateRoute exact path=\"/\" authenticated={isAuth} component={Home} {...props} />\n        <PrivateRoute path=\"/note\" authenticated={isAuth} component={Notes} />\n        <PrivateRoute\n          path=\"/awareness\"\n          authenticated={isAuth}\n          component={Notes}\n        />\n        <PrivateRoute\n          path=\"/day/:dayId?\"\n          authenticated={isAuth}\n          component={Day}\n        />\n        <PublicRoute path=\"/signup\" authenticated={isAuth} component={SignUp} />\n        <PublicRoute path=\"/login\" authenticated={isAuth} component={Login} />\n      </Switch>\n    </Container>\n  );\n};\n\nexport default App;\n","import {\r\n  Action,\r\n  applyMiddleware,\r\n  combineReducers,\r\n  compose,\r\n  createStore,\r\n} from 'redux';\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport { authReducer } from './authReducer';\r\nimport calendarReducer from './calendarReducer';\r\nimport { notesReducer } from './noteReducer';\r\nimport { editorReducer } from './editorReducer';\r\nimport { thunksDayReducer } from './thunksDayReducer';\r\nimport { activeReducer } from './activityReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  active: activeReducer,\r\n  thunks: thunksDayReducer,\r\n  editor: editorReducer,\r\n  notes: notesReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer,\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\nexport type InferActionsTypes<T> = T extends {\r\n  [keys: string]: (...args: any[]) => infer U;\r\n}\r\n  ? U\r\n  : never;\r\n\r\nexport type BaseThunkType<\r\n  A extends Action = Action,\r\n  R = Promise<void>\r\n> = ThunkAction<R, AppStateType, unknown, A>;\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware)),\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport { store } from './store/index';\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Sign_wrapper__3EkaY\",\"form_box\":\"Sign_form_box__3olgG\",\"header_block\":\"Sign_header_block__2KOSb\",\"title\":\"Sign_title__3Whmr\",\"submit\":\"Sign_submit__2HMvl\",\"signGoogle\":\"Sign_signGoogle__3d4RE\",\"signup\":\"Sign_signup__3lw6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages_area\":\"messages_messages_area__uHjwh\",\"messages_area_active_editor\":\"messages_messages_area_active_editor__3AaQe\",\"message_item\":\"messages_message_item__1wqm4\",\"class_note\":\"messages_class_note__1Hz1b\",\"class_awareness\":\"messages_class_awareness__YgHXB\",\"message_item_box\":\"messages_message_item_box__1Vmhn\",\"message_time\":\"messages_message_time__1ejCz\",\"message_text\":\"messages_message_text__hKe9G\",\"message_remote\":\"messages_message_remote__t2d8T\",\"message_editor\":\"messages_message_editor__1YjSC\",\"message_remove\":\"messages_message_remove__1xnOI\",\"date_item_container\":\"messages_date_item_container__1u8aW\",\"date_item\":\"messages_date_item__1yJAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__3zc4b\",\"headerLogo\":\"header_headerLogo__c7jFp\",\"logo\":\"header_logo__dqkhQ\",\"headerDate\":\"header_headerDate__1OlCq\",\"headerNavigationBlock\":\"header_headerNavigationBlock__wK-ca\",\"headerNavigation\":\"header_headerNavigation__1T0Ak\",\"headerNavigationItem\":\"header_headerNavigationItem__tCEnP\",\"headerNavigationItemCenter\":\"header_headerNavigationItemCenter__3ItL3\",\"headerLogout\":\"header_headerLogout__1vxrr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockInput\":\"inputDay_blockInput__k3TF2\",\"inputTitle\":\"inputDay_inputTitle__au8MJ\",\"input\":\"inputDay_input__1IRYk\",\"showText\":\"inputDay_showText__2AOeP\",\"save\":\"inputDay_save__1vKH6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionBox\":\"activityEvent_actionBox__sdLCh\",\"actionItem\":\"activityEvent_actionItem__97kJi\",\"actionText\":\"activityEvent_actionText__2A6Nc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages_area\":\"allMessages_messages_area__1fBHj\",\"messages_area_active_editor\":\"allMessages_messages_area_active_editor__3HGAL\",\"column_reverse\":\"allMessages_column_reverse__1Qml-\",\"column\":\"allMessages_column__12RF9\",\"message_item\":\"allMessages_message_item__3DGGk\",\"class_note\":\"allMessages_class_note__2eYss\",\"class_awareness\":\"allMessages_class_awareness__1rKvN\",\"message_item_box\":\"allMessages_message_item_box__yLO_0\",\"message_time\":\"allMessages_message_time__E0rh1\",\"message_text\":\"allMessages_message_text__1WLYW\",\"message_remote\":\"allMessages_message_remote__3P_Ws\",\"message_editor\":\"allMessages_message_editor__1DxpD\",\"message_remove\":\"allMessages_message_remove__1QMlV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageDay\":\"notes_pageDay__KZyLp\",\"pageDayContent\":\"notes_pageDayContent__ZUsDK\",\"editor\":\"notes_editor__QlVvK\",\"button\":\"notes_button__1VbZa\"};","module.exports = __webpack_public_path__ + \"static/media/google.1acf3b9c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor_panel\":\"editorPanel_editor_panel__2We5s\",\"editor_panel_group\":\"editorPanel_editor_panel_group__S62-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageDay\":\"day_pageDay__2Jgis\",\"pageDayContent\":\"day_pageDayContent__21BtE\",\"pageDaySideBar\":\"day_pageDaySideBar__25eC5\",\"Calendar_smile__18_Of\":\"day_Calendar_smile__18_Of__ORw6-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__11IIC\",\"paper\":\"modal_paper__rcC3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Calendar_icon__1VCOU\",\"logo\":\"Calendar_logo__1vf5l\",\"row\":\"Calendar_row__12k7n\",\"row-middle\":\"Calendar_row-middle__cynuY\",\"col\":\"Calendar_col__dZaRJ\",\"colStart\":\"Calendar_colStart__1gIv7\",\"colCenter\":\"Calendar_colCenter__VdiNf\",\"colEnd\":\"Calendar_colEnd__c2hVI\",\"calendar\":\"Calendar_calendar__20ymr\",\"header\":\"Calendar_header__n_t08\",\"days\":\"Calendar_days__3o9xZ\",\"cell\":\"Calendar_cell__27Zoq\",\"selected\":\"Calendar_selected__OM7G1\",\"body\":\"Calendar_body__35nCY\",\"number\":\"Calendar_number__10VpR\",\"disabled\":\"Calendar_disabled__3ygA8\",\"bg\":\"Calendar_bg__1gMSQ\",\"activities\":\"Calendar_activities__1_imC\",\"allActivity\":\"Calendar_allActivity__1_Ucw\",\"activity\":\"Calendar_activity__sqVRf\",\"notesToday\":\"Calendar_notesToday__2hpTH\",\"awarenesToday\":\"Calendar_awarenesToday__38vjY\"};"],"sourceRoot":""}